name: Performance CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # 每天凌晨2点自动运行性能测试
    - cron: '0 2 * * *'

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run Lighthouse CI
      run: npm run lighthouse
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: .lighthouseci/

  playwright-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Build project
      run: npm run build

    - name: Run Playwright performance tests
      run: npm run test:performance

    - name: Upload Playwright results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results
        path: test-results/

    - name: Upload Playwright HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/

  web-vitals-monitoring:
    runs-on: ubuntu-latest
    needs: [lighthouse-ci, playwright-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Start preview server
      run: npm run preview &

    - name: Wait for server
      run: npx wait-on http://localhost:4173

    - name: Collect Web Vitals
      run: |
        node -e "
        const puppeteer = require('puppeteer');

        (async () => {
          const browser = await puppeteer.launch();
          const page = await browser.newPage();

          await page.goto('http://localhost:4173');
          await page.waitForLoadState('networkidle');

          const vitals = await page.evaluate(() => {
            return new Promise((resolve) => {
              const vitals = {};
              let count = 0;
              const target = 5;

              const checkComplete = () => {
                count++;
                if (count >= target) resolve(vitals);
              };

              import('web-vitals').then(({ onCLS, onFID, onFCP, onLCP, onTTFB }) => {
                onCLS((metric) => { vitals.cls = metric.value; checkComplete(); });
                onFID((metric) => { vitals.fid = metric.value; checkComplete(); });
                onFCP((metric) => { vitals.fcp = metric.value; checkComplete(); });
                onLCP((metric) => { vitals.lcp = metric.value; checkComplete(); });
                onTTFB((metric) => { vitals.ttfb = metric.value; checkComplete(); });
              });

              setTimeout(() => resolve(vitals), 10000);
            });
          });

          console.log('Web Vitals:', JSON.stringify(vitals, null, 2));
          await browser.close();
        })();
        "

  performance-budget:
    runs-on: ubuntu-latest
    needs: [lighthouse-ci, playwright-tests]
    if: always()

    steps:
    - name: Download Lighthouse results
      uses: actions/download-artifact@v4
      with:
        name: lighthouse-results
        path: .lighthouseci/

    - name: Download Playwright results
      uses: actions/download-artifact@v4
      with:
        name: playwright-results
        path: test-results/

    - name: Check Performance Budget
      run: |
        echo "=== Performance Budget Check ==="

        # 检查Lighthouse分数
        if [ -f .lighthouseci/manifest.json ]; then
          echo "Lighthouse results found"
          # 这里可以添加性能预算检查逻辑
        fi

        # 检查Playwright测试结果
        if [ -f test-results/results.json ]; then
          echo "Playwright results found"
          # 这里可以添加性能测试结果分析
        fi

        echo "Performance check completed"

    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          let comment = '## 🚀 Performance Test Results\n\n';

          // 添加Lighthouse结果
          comment += '### Lighthouse CI\n';
          if (fs.existsSync('.lighthouseci/manifest.json')) {
            comment += '✅ Lighthouse CI completed successfully\n';
          } else {
            comment += '❌ Lighthouse CI failed\n';
          }

          // 添加Playwright结果
          comment += '\n### Playwright Tests\n';
          if (fs.existsSync('test-results/results.json')) {
            comment += '✅ Performance tests completed successfully\n';
          } else {
            comment += '❌ Performance tests failed\n';
          }

          comment += '\n📊 [View detailed reports in Actions artifacts](' +
                     context.payload.pull_request.html_url.replace('/pull/', '/actions/runs/') + ')';

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });